{"ast":null,"code":"import _slicedToArray from\"/Users/morganjordan/Development/react_apps/morgansjordan/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';var Route=function Route(_ref){var path=_ref.path,children=_ref.children;//get the Route to update\nvar _useState=useState(window.location.pathname),_useState2=_slicedToArray(_useState,2),currentPath=_useState2[0],setCurrentPath=_useState2[1];useEffect(function(){var onLocationChange=function onLocationChange(){setCurrentPath(window.location.pathname);//tracks whatever pathname is\n};window.addEventListener('popstate',onLocationChange);//cleanup function\nreturn function(){window.removeEventListener('popstate',onLocationChange);};},[]);//empty array means we run it only once\n//current path is window.location.pathname\nreturn currentPath===path?children:null;// should the Route compo show its child or hide it?\n};export default Route;","map":{"version":3,"sources":["/Users/morganjordan/Development/react_apps/morgansjordan/src/components/Route.js"],"names":["React","useEffect","useState","Route","path","children","window","location","pathname","currentPath","setCurrentPath","onLocationChange","addEventListener","removeEventListener"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAwB,IAArBC,CAAAA,IAAqB,MAArBA,IAAqB,CAAfC,QAAe,MAAfA,QAAe,CAClC;AACA,cAAsCH,QAAQ,CAACI,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAA9C,wCAAOC,WAAP,eAAoBC,cAApB,eAEAT,SAAS,CAAC,UAAM,CACZ,GAAMU,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BD,cAAc,CAACJ,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAd,CAAyC;AAC5C,CAFD,CAGAF,MAAM,CAACM,gBAAP,CAAwB,UAAxB,CAAoCD,gBAApC,EAEA;AACA,MAAO,WAAM,CACTL,MAAM,CAACO,mBAAP,CAA2B,UAA3B,CAAuCF,gBAAvC,EACH,CAFD,CAGH,CAVQ,CAUN,EAVM,CAAT,CAUQ;AACR;AACA,MAAOF,CAAAA,WAAW,GAAKL,IAAhB,CAAuBC,QAAvB,CAAkC,IAAzC,CAA+C;AAClD,CAjBD,CAmBA,cAAeF,CAAAA,KAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\n\n\nconst Route = ({ path, children }) => {\n    //get the Route to update\n    const [currentPath, setCurrentPath] = useState(window.location.pathname)\n    \n    useEffect(() => {\n        const onLocationChange = () => {\n            setCurrentPath(window.location.pathname) //tracks whatever pathname is\n        }\n        window.addEventListener('popstate', onLocationChange);\n\n        //cleanup function\n        return () => {\n            window.removeEventListener('popstate', onLocationChange);\n        }\n    }, []); //empty array means we run it only once\n    //current path is window.location.pathname\n    return currentPath === path ? children : null; // should the Route compo show its child or hide it?\n}\n\nexport default Route;"]},"metadata":{},"sourceType":"module"}